{"version":3,"file":"static/js/138.f5bbe141.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/PostForm/PostForm.module.css?40ad","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-way-of-samurai/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://react-way-of-samurai/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/Profile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__VHbzQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import styles from './Post.module.css';\n\nconst Post = (props) => {\n  const { message, likesCount, user } = props.post;\n  const { avatar } = user;\n\n  return (\n    <div  className={ styles.item }>\n      <img src={ avatar.large.src } alt={ avatar.large.title }/>\n\n      { message }\n\n      <div>\n        <span> like </span>\n        { likesCount }\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postForm\":\"PostForm_postForm__Ibn04\",\"formElement\":\"PostForm_formElement__jbLWB\"};","import { Field, Formik } from 'formik';\n\nimport styles from './PostForm.module.css';\n\nconst Form = ({ values, handleChange, handleBlur, handleSubmit, isSubmitting, onPostChange }) => {\n  return (\n    <form onSubmit={ handleSubmit } className={ styles.postForm }>\n      <div className={ styles.formElement }>\n        <Field type={ \"text\" }\n               name={ \"message\" }\n               as={ \"textarea\" }\n               value={ values.message }\n               onChange={ handleChange }\n               onBlur={ handleBlur }\n        />\n      </div>\n\n      <div className={ styles.formElement }>\n        <button type={ \"submit\" } disabled={ isSubmitting }>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nconst PostForm = (props) => {\n  const initialValues = { message: props.newPostText };\n\n  return (\n    <Formik initialValues={ initialValues } onSubmit={ props.onAddPost }>\n      { Form }\n    </Formik>\n  )\n}\n\nexport default PostForm;","import styles from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport PostForm from './PostForm/PostForm';\n\nconst MyPosts = (props) => {\n  const { posts, addProfilePost, newPostText, userId, authUserId } = props;\n\n  const postsElements = posts.map(({ id, ...post }) => {\n    return (\n      <Post id={ id } key={ id } post={ post }/>\n    )\n  })\n\n  const onAddPost = (params, { resetForm }) => {\n    addProfilePost({ ...params, userId, authorId: authUserId })\n    return resetForm();\n  }\n\n  return (\n    <div className={ styles.postsBlock }>\n      <h1>My posts</h1>\n\n      <div className={ styles.posts }>\n        { postsElements }\n      </div>\n\n      <PostForm onAddPost={ onAddPost } newPostText={ newPostText } userId={ userId }/>\n    </div>\n  )\n}\n\nexport default MyPosts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport MyPosts from './MyPosts';\nimport { addProfilePost, getProfilePosts } from '../../../redux/thunkCreators/thunkCreators';\nimport withRouter from '../../../hoc/withRouter';\n\nconst mapStateToProps = ({ profilePage, auth }) => {\n  return {\n    posts: profilePage.posts,\n    newPostText: profilePage.newPostText,\n    authUserId: auth.userId,\n  };\n}\n\nconst mapDispatchToProps = { addProfilePost, getProfilePosts };\n\nconst areEqual = (prevProps, nextProps) => {\n  return JSON.stringify(prevProps) !== JSON.stringify(nextProps);\n}\n\nconst MyPostsContainer = (props) => {\n  return (\n    <MyPosts { ...props } userId={ props.router.params.id || props.authUserId }/>\n  );\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(React.memo(MyPostsContainer, areEqual));","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"photoSection\":\"ProfileInfo_photoSection__KBiJ2\",\"infoSection\":\"ProfileInfo_infoSection__qfEn4\",\"info\":\"ProfileInfo_info__lZgkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__RTL2w\",\"statusElement\":\"ProfileStatus_statusElement__Xthfb\"};","import styles from './ProfileStatus.module.css';\nimport { useEffect, useState } from 'react';\n\nconst setProfileInState = ({ props, setIsEditable }) => () => {\n  if (props.auth.userId === props.profileUserId) {\n    return setIsEditable(true);\n  }\n\n  return setIsEditable(false);\n}\n\nconst updateStateAfterChangesProfile = ({ props, setIsEditable, setStatus }) => () => {\n  if (props.auth.userId === props.profileUserId) {\n      setIsEditable(true);\n      setStatus(props.status)\n  }\n\n  if (props.auth.userId !== props.profileUserId) {\n      setIsEditable(false);\n      setStatus(props.status)\n  }\n}\n\nconst ProfileStatus = props => {\n  const [editeMode, setEditMode] = useState(false);\n  const [isEditable, setIsEditable] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(setProfileInState({ props, setIsEditable }));\n  useEffect(updateStateAfterChangesProfile({ props, setIsEditable, setStatus}), [props.status]);\n\n  const changeStatusEditMode = () => {\n    if (isEditable) {\n      setEditMode(!editeMode);\n\n      if (editeMode) {\n        return props.updateProfile({ id: props.auth.userId, status });\n      }\n    }\n  }\n\n  const onChangeProfileStatus = (event) => {\n    return setStatus(event.currentTarget.value);\n  }\n\n  return (\n    <div className={ styles.status }>\n      <span>Status:</span>\n      {\n        editeMode && isEditable\n          ?\n          <div className={ styles.statusElement }>\n            <input autoFocus={ true } onBlur={ changeStatusEditMode } onChange={ onChangeProfileStatus }\n                   value={ status }/>\n          </div>\n          :\n          <div className={ styles.statusElement }>\n            <span onDoubleClick={ changeStatusEditMode }>{ props.status || '---' }</span>\n          </div>\n      }\n    </div>\n  );\n}\n\n\nexport default ProfileStatus;","import styles from './ProfileInfo.module.css';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\nimport Preloader from '../../common/Preloader/Preloader';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader preloader={ props.preloader }/>\n  }\n\n  return (\n    <div>\n      <div className={ styles.descriptionBlock }>\n        <div className={ styles.photoSection }>\n          <img src={ props.profile.avatar.large.src } alt={ props.profile.avatar.large.title }/>\n        </div>\n\n        <div className={ styles.infoSection }>\n          <ProfileStatus\n            status={ props.profile.status }\n            profileUserId={ props.profile.userId }\n            updateProfile={ props.updateProfile }\n            auth={ props.auth }\n          />\n\n          <div className={ styles.info }><span>Full name: </span> { props.profile.fullName }</div>\n          <div className={ styles.info }><span>About Me:</span> { props.profile.aboutMe }</div>\n          <div className={ styles.info }>\n            <span>Looking for a job: </span> { props.profile.lookingForAJob ? 'Yes' : 'No' }</div>\n          <div className={ styles.info }><span>Job description: </span> { props.profile.lookingForAJobDescription }\n          </div>\n          {\n            Object.keys(props.profile.contacts).map((contactKey, index) => {\n              return (\n                <div className={ styles.info } key={ index }>\n                  <span>{ contactKey }: </span> <a\n                  href={ props.profile.contacts[contactKey] }>{ props.profile.contacts[contactKey] }</a>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport ProfileInfo from './ProfileInfo';\nimport withRouter from '../../../hoc/withRouter';\nimport { updateProfile } from '../../../redux/thunkCreators/thunkCreators';\n\nconst mapStateToProps = ({ profilePage, auth, preloader }) => {\n  return {\n    auth,\n    profile: profilePage.profile,\n    preloader,\n  };\n};\n\nconst mapDispatchToProps = { updateProfile };\n\nclass ProfileInfoContainer extends React.Component {\n  render = () => {\n    return (\n      <ProfileInfo { ...this.props }/>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(ProfileInfoContainer)","import styles from './Profile.module.css';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer';\n\nconst Profile = () => {\n  return (\n    <div className={ styles.profile }>\n      <ProfileInfoContainer/>\n      <MyPostsContainer/>\n    </div>\n  )\n}\n\nexport default Profile;"],"names":["props","post","message","likesCount","avatar","user","className","styles","src","large","alt","title","Form","values","handleChange","handleBlur","handleSubmit","isSubmitting","onPostChange","onSubmit","type","name","as","value","onChange","onBlur","disabled","initialValues","newPostText","onAddPost","posts","addProfilePost","userId","authUserId","postsElements","map","id","params","resetForm","authorId","mapDispatchToProps","getProfilePosts","areEqual","prevProps","nextProps","JSON","stringify","MyPostsContainer","router","compose","withRouter","connect","profilePage","auth","React","useState","editeMode","setEditMode","isEditable","setIsEditable","status","setStatus","useEffect","profileUserId","setProfileInState","updateStateAfterChangesProfile","changeStatusEditMode","updateProfile","autoFocus","event","currentTarget","onDoubleClick","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","contactKey","index","href","Preloader","preloader","ProfileInfoContainer","render"],"sourceRoot":""}